openapi: 3.0.0
info:
  version: 1.0.0
  title: null
  description: ''
servers:
  - url: 'https://api.demo.tokend.io'
    description: TokenD Developer Environment
paths:
  /intergrations/incognito-light-registrator/v1/register:
    post:
      tags:
        - Register
      summary: Register
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  $ref: '#/components/schemas/DocumentSod'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Register'
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
components:
  schemas:
    DocumentSod:
      allOf:
        - $ref: '#/components/schemas/DocumentSodKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - hash_algorithm
                - signature_algorithm
                - signed_attributes
                - signature
                - encapsulated_content
                - pem_file
                - dg15
              properties:
                hash_algorithm:
                  type: string
                  description: The hash algorithm used to hash the content
                signature_algorithm:
                  type: string
                  description: The signature algorithm used to sign the content
                signed_attributes:
                  type: string
                  description: 'The signed attributes, for e.g. 104 bytes-long hex string'
                signature:
                  type: string
                  description: Signature corresponding to the algorithm
                encapsulated_content:
                  type: string
                  description: 'The encapsulated content, for e.g. 186 bytes-long hex string'
                pem_file:
                  type: string
                  description: The PEM file containing the public key
                dg15:
                  type: string
                  description: 'The Data Group 15, hex string'
    DocumentSodKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - document-sod
    Errors:
      description: 'Standard JSON:API error'
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: Non empty array of errors occurred during request processing
          items:
            type: object
            required:
              - title
              - status
            properties:
              title:
                type: string
                description: 'Title is a short, human-readable summary of the problem'
                example: Bad Request
              detail:
                type: string
                description: Detail is a human-readable explanation specific to this occurrence of the problem
                example: Request body was expected
              status:
                type: integer
                description: Status is the HTTP status code applicable to this problem
                example: 400
                enum:
                  - 400
                  - 401
                  - 403
                  - 404
                  - 409
                  - 500
    Register:
      allOf:
        - $ref: '#/components/schemas/RegisterKey'
        - type: object
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - signature
                - document_hash
              properties:
                signature:
                  type: string
                  example: 7768792064696420796F75206576656E206465636F6465642069743F
                  description: ECDSA signature of the document hash
                document_hash:
                  type: string
                  example: 7768792064696420796F75206576656E206465636F6465642069743F
                  description: Poseidon hash of the document
    RegisterKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - register
  parameters:
    pageLimitParam:
      in: query
      name: 'page[limit]'
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 15
        description: Numbers of items per page to return.
    pageNumberParam:
      in: query
      name: 'page[number]'
      required: false
      schema:
        type: integer
      description: The number of a page to return.
    sortingParam:
      in: query
      name: 'page[order]'
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
        description: 'Order of records on the page. If sortingParam is not specified, order of records is by default sorted by ID.'
